{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\nconst server = require;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: [],\n      postId: [],\n      id: [],\n      body: [],\n      email: []\n    };\n\n    this.removeName = index => {\n      const {\n        names\n      } = this.state;\n      this.setState({\n        names: names.filter((name, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        names: [...this.state.names, name]\n      });\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        } // body: this.state.names\n\n      };\n      let i = Math.floor(Math.random() * 10);\n      fetch('https://jsonplaceholder.typicode.com/comments?postId=' + i, requestOptions).then(response => response.json()).then(data => this.setState({\n        postId: [...this.state.postId, JSON.stringify(data[0].postId)]\n      })); // .then(data => this.setState({ id: [...this.state.id, JSON.stringify(data[0].id)] }))\n      // .then(data => this.setState({ body: [...this.state.name, JSON.stringify(data[0].body)] }))\n      // .then(data => this.setState({ email: [...this.state.email, JSON.stringify(data[0].email)] }))\n      // // .then(data => alert(data[0].id));\n\n      alert(JSON.stringify(this.state.names));\n      alert(JSON.stringify(this.state.postId));\n    };\n  }\n\n  render() {\n    const {\n      names\n    } = this.state;\n    const {\n      postId\n    } = this.state;\n    const {\n      id\n    } = this.state;\n    const {\n      body\n    } = this.state;\n    const {\n      email\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        nameData: names,\n        removeName: this.removeName,\n        postIdData: postId,\n        idData: id,\n        bodyData: body,\n        emailData: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmitName: this.handleSubmitName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js"],"names":["React","Component","Table","Form","server","require","App","state","names","postId","id","body","email","removeName","index","setState","filter","name","i","handleSubmitName","requestOptions","method","headers","Math","floor","random","fetch","then","response","json","data","JSON","stringify","alert","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Table from './Table.js'\nimport Form from './Form.js'\nconst server = require\n\n\nclass App extends Component {\n  state = {\n    names: [],\n    postId: [],\n    id: [],\n    body: [],\n    email: []\n  }\n\n  removeName = (index) => {\n    const {names} = this.state\n\n    this.setState({\n      names: names.filter((name, i) => {\n        return i !== index\n      }),\n    })\n  };\n\n\n  handleSubmitName = (name) => {\n    this.setState({names: [...this.state.names, name]})\n\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        // body: this.state.names\n    };\n\n\n    let i = Math.floor(Math.random() * 10)\n\n    fetch('https://jsonplaceholder.typicode.com/comments?postId=' + i, requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ postId: [...this.state.postId, JSON.stringify(data[0].postId)] }))\n        // .then(data => this.setState({ id: [...this.state.id, JSON.stringify(data[0].id)] }))\n        // .then(data => this.setState({ body: [...this.state.name, JSON.stringify(data[0].body)] }))\n        // .then(data => this.setState({ email: [...this.state.email, JSON.stringify(data[0].email)] }))\n        // // .then(data => alert(data[0].id));\n\n    alert(JSON.stringify(this.state.names));\n    alert(JSON.stringify(this.state.postId));\n  }\n\n\n  render() {\n    const { names } = this.state;\n    const { postId } = this.state;\n    const { id } = this.state;\n    const { body } = this.state;\n    const { email } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table nameData={names} removeName={this.removeName}\n        postIdData={postId}\n        idData={id}\n        bodyData={body}\n        emailData={email}\n        />\n        <Form handleSubmitName={this.handleSubmitName} />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}