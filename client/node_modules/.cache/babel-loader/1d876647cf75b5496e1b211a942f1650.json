{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brsbl/Desktop/jukebox/jukebox-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: [],\n      responses: []\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        names: [...this.state.names, name]\n      });\n      let requestCount = this.state.names.length;\n\n      if (requestCount < 4) {\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state.names[requestCount < 1])\n        };\n        fetch('/api', requestOptions).then(response => response.json()).then(data => this.setState({\n          responses: [...this.state.responses, {\n            recommended_artist: data.recommended_artist,\n            album_name: data.album_name,\n            release_date: data.release_date,\n            album_image: data.album_image.url\n          }]\n        }));\n        alert(JSON.stringify(this.state.names));\n      }\n    };\n  }\n\n  render() {\n    const {\n      responses\n    } = this.state;\n    const {\n      names\n    } = this.state;\n    alert(JSON.stringify(this.state.responses));\n    const inputSize = this.state.names.length;\n    let inputForm;\n\n    if (inputSize < 3) {\n      inputForm = /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmitName: this.handleSubmitName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n    } else if (inputSize == 3) {\n      if (this.state.responses[0].recommended_artist == this.state.responses[1].recommended_artist && this.state.responses[1].recommended_artist == this.state.responses[2].recommended_artist) {\n        inputForm = ' 🎉🎉🎉 You won!!! Refresh to play again.';\n      } else {\n        inputForm = '😭😭😭 You lost...Refresh to try again';\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"parent\",\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsesData: responses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-container\",\n        children: inputForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brsbl/Desktop/jukebox/jukebox-app/client/src/App.js"],"names":["React","Component","Table","Form","App","state","names","responses","handleSubmitName","name","setState","requestCount","length","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","recommended_artist","album_name","release_date","album_image","url","alert","render","inputSize","inputForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Table from './Table.js'\nimport Form from './Form.js'\n\n\n\nclass App extends Component {\n  state = {\n    names: [],\n    responses: []\n  }\n\n  handleSubmitName = (name) => {\n    this.setState({names: [...this.state.names, name]})\n\n    let requestCount = this.state.names.length\n\n    if (requestCount < 4) {\n      const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(this.state.names[requestCount<1])\n      };\n\n      fetch('/api', requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ responses: [...this.state.responses, { recommended_artist: data.recommended_artist, album_name: data.album_name, release_date: data.release_date, album_image: data.album_image.url } ]}))\n\n        alert(JSON.stringify(this.state.names))\n    }\n\n  };\n\n  render() {\n    const { responses } = this.state;\n    const { names } = this.state;\n\n    alert(JSON.stringify(this.state.responses))\n\n    const inputSize = this.state.names.length;\n    let inputForm;\n    if (inputSize < 3) {\n      inputForm = <Form handleSubmitName={this.handleSubmitName} />\n    } else if (inputSize == 3) {\n      if (this.state.responses[0].recommended_artist == this.state.responses[1].recommended_artist &&\n        this.state.responses[1].recommended_artist == this.state.responses[2].recommended_artist) {\n        inputForm = ' 🎉🎉🎉 You won!!! Refresh to play again.'\n      } else {\n        inputForm = '😭😭😭 You lost...Refresh to try again'\n      }\n    }\n\n    return (\n      <div id=\"parent\" className=\"body\">\n        <div className=\"container\">\n          <Table responsesData={responses} />\n        </div>\n        <div className=\"small-container\">\n          {inputForm}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}