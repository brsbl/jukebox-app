{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: [],\n      postId: ''\n    };\n\n    this.removeName = index => {\n      const {\n        names\n      } = this.state;\n      this.setState({\n        names: names.filter((name, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmit = name => {\n      this.setState({\n        names: [...this.state.names, name]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: this.state.names\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n        postId: data.id + Math.floor(Math.random() * 10)\n      }));\n      alert(this.state.artistName);\n      alert(this.state.postId);\n    };\n  }\n\n  render() {\n    const {\n      names\n    } = this.state;\n    const {\n      postId\n    } = this.state;\n    const {\n      artistName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        nameData: names,\n        removeName: this.removeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"Returned Id: \", postId, \"Returned artistName: \", artistName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js"],"names":["React","Component","Table","Form","App","state","names","postId","removeName","index","setState","filter","name","i","handleSubmit","requestOptions","method","headers","body","fetch","then","response","json","data","id","Math","floor","random","alert","artistName","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BC,UAN0B,GAMZC,KAAD,IAAW;AACtB,YAAM;AAACH,QAAAA;AAAD,UAAU,KAAKD,KAArB;AAEA,WAAKK,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAEA,KAAK,CAACK,MAAN,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC/B,iBAAOA,CAAC,KAAKJ,KAAb;AACD,SAFM;AADK,OAAd;AAKD,KAdyB;;AAAA,SAgB1BK,YAhB0B,GAgBVF,IAAD,IAAU;AACvB,WAAKF,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBM,IAAtB;AAAR,OAAd;AAEA,YAAMG,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AAHE,OAAvB;AAKAa,MAAAA,KAAK,CAAC,4CAAD,EAA+CJ,cAA/C,CAAL,CACKK,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKb,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEgB,IAAI,CAACC,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B;AAApB,OAAd,CAFlB;AAIAC,MAAAA,KAAK,CAAC,KAAKvB,KAAL,CAAWwB,UAAZ,CAAL;AACAD,MAAAA,KAAK,CAAC,KAAKvB,KAAL,CAAWE,MAAZ,CAAL;AACD,KA9ByB;AAAA;;AAgC1BuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAExB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,UAAM;AAAEwB,MAAAA;AAAF,QAAiB,KAAKxB,KAA5B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEC,KAAjB;AAAwB,QAAA,UAAU,EAAE,KAAKE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAE,KAAKM;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,mBAGgBP,MAHhB,2BAKwBsB,UALxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9CyB;;AAiD5B,eAAezB,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport Table from './Table.js'\nimport Form from './Form.js'\n\n\nclass App extends Component {\n  state = {\n    names: [],\n    postId: ''\n  }\n\n  removeName = (index) => {\n    const {names} = this.state\n\n    this.setState({\n      names: names.filter((name, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (name) => {\n    this.setState({names: [...this.state.names, name]})\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: this.state.names\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ postId: data.id + Math.floor(Math.random() * 10) }));\n\n    alert(this.state.artistName);\n    alert(this.state.postId);\n  }\n\n  render() {\n    const { names } = this.state\n    const { postId } = this.state;\n    const { artistName } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table nameData={names} removeName={this.removeName} />\n        <Form handleSubmit={this.handleSubmit} />\n        Returned Id: {postId}\n\n        Returned artistName: {artistName}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}