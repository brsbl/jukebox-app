{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters: []\n    };\n\n    this.removeCharacter = index => {\n      const {\n        characters\n      } = this.state;\n      this.setState({\n        characters: characters.filter((character, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmit = character => {\n      this.setState({\n        characters: [...this.state.characters, character]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: this.state.artistName\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n        postId: data.id\n      }));\n      alert(this.state.artistName);\n    };\n  }\n\n  render() {\n    const {\n      characters\n    } = this.state;\n    const {\n      postId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        characterData: characters,\n        removeCharacter: this.removeCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"Returned Id: \", postId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js"],"names":["React","Component","Table","Form","App","state","characters","removeCharacter","index","setState","filter","character","i","handleSubmit","requestOptions","method","headers","body","artistName","fetch","then","response","json","data","postId","id","alert","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAE;AADN,KADkB;;AAAA,SAK1BC,eAL0B,GAKPC,KAAD,IAAW;AAC3B,YAAM;AAACF,QAAAA;AAAD,UAAe,KAAKD,KAA1B;AAEA,WAAKI,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEA,UAAU,CAACI,MAAX,CAAkB,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAC9C,iBAAOA,CAAC,KAAKJ,KAAb;AACD,SAFW;AADA,OAAd;AAKD,KAbyB;;AAAA,SAe1BK,YAf0B,GAeVF,SAAD,IAAe;AAC5B,WAAKF,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,EAA2BK,SAA3B;AAAb,OAAd;AAEA,YAAMG,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWa;AAHE,OAAvB;AAKAC,MAAAA,KAAK,CAAC,4CAAD,EAA+CL,cAA/C,CAAL,CACKM,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKd,QAAL,CAAc;AAAEe,QAAAA,MAAM,EAAED,IAAI,CAACE;AAAf,OAAd,CAFlB;AAIAC,MAAAA,KAAK,CAAC,KAAKrB,KAAL,CAAWa,UAAZ,CAAL;AACD,KA5ByB;AAAA;;AA8B1BS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAM;AAAEmB,MAAAA;AAAF,QAAa,KAAKnB,KAAxB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,aAAa,EAAEC,UAAtB;AAAkC,QAAA,eAAe,EAAE,KAAKC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAE,KAAKM;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,mBAGgBW,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzCyB;;AA4C5B,eAAepB,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport Table from './Table.js'\nimport Form from './Form.js'\n\n\nclass App extends Component {\n  state = {\n    characters: []\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: this.state.artistName\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ postId: data.id }));\n\n    alert(this.state.artistName);\n  }\n\n  render() {\n    const { characters } = this.state\n    const { postId } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n        Returned Id: {postId}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}