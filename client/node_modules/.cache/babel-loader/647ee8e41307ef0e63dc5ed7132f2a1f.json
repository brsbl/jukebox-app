{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './Table.js';\nimport Form from './Form.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: [],\n      responses: []\n    };\n\n    this.removeName = index => {\n      const {\n        names\n      } = this.state;\n      this.setState({\n        names: names.filter((name, i) => {\n          return i !== index;\n        })\n      });\n    };\n\n    this.handleSubmitName = name => {\n      this.setState({\n        names: [...this.state.names, name]\n      });\n    };\n\n    this.handleSubmitResponse = responses => {\n      this.setState({\n        responses: [...this.state.responses, response]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: this.state.names\n      };\n      fetch('https://jsonplaceholder.typicode.com/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n        responses: data.id + Math.floor(Math.random() * 10)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      names\n    } = this.state;\n    const {\n      responses\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        nameData: names,\n        removeName: this.removeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        handleSubmitName: this.handleSubmitName,\n        handleSubmitResponse: this.handleSubmitResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"Returned Reponses: \", responses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brsbl/Desktop/jukebox/react-tutorial/src/App.js"],"names":["React","Component","Table","Form","App","state","names","responses","removeName","index","setState","filter","name","i","handleSubmitName","handleSubmitResponse","response","requestOptions","method","headers","body","fetch","then","json","data","id","Math","floor","random","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KADkB;;AAAA,SAM1BC,UAN0B,GAMZC,KAAD,IAAW;AACtB,YAAM;AAACH,QAAAA;AAAD,UAAU,KAAKD,KAArB;AAEA,WAAKK,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAEA,KAAK,CAACK,MAAN,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC/B,iBAAOA,CAAC,KAAKJ,KAAb;AACD,SAFM;AADK,OAAd;AAKD,KAdyB;;AAAA,SAgB1BK,gBAhB0B,GAgBNF,IAAD,IAAU;AAC3B,WAAKF,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBM,IAAtB;AAAR,OAAd;AAED,KAnByB;;AAAA,SAqB1BG,oBArB0B,GAqBFR,SAAD,IAAe;AACpC,WAAKG,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,SAAf,EAA0BS,QAA1B;AAAZ,OAAd;AAEA,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC;AAHE,OAAvB;AAKAe,MAAAA,KAAK,CAAC,4CAAD,EAA+CJ,cAA/C,CAAL,CACKK,IADL,CACUN,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EADtB,EAEKD,IAFL,CAEUE,IAAI,IAAI,KAAKd,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAEiB,IAAI,CAACC,EAAL,GAAUC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B;AAAvB,OAAd,CAFlB;AAKH,KAlC2B;AAAA;;AAoC1BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEC,KAAjB;AAAwB,QAAA,UAAU,EAAE,KAAKE;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,KAAKM,gBAA7B;AAA+C,QAAA,oBAAoB,EAAE,KAAKC;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,yBAGsBR,SAHtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA/CyB;;AAkD5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport Table from './Table.js'\nimport Form from './Form.js'\n\n\nclass App extends Component {\n  state = {\n    names: [],\n    responses: []\n  }\n\n  removeName = (index) => {\n    const {names} = this.state\n\n    this.setState({\n      names: names.filter((name, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmitName = (name) => {\n    this.setState({names: [...this.state.names, name]})\n\n  }\n\n  handleSubmitResponse = (responses) => {\n    this.setState({responses: [...this.state.responses, response]})\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: this.state.names\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({ responses: data.id + Math.floor(Math.random() * 10) }));\n\n\n}\n\n  render() {\n    const { names } = this.state\n    const { responses } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table nameData={names} removeName={this.removeName} />\n        <Form handleSubmitName={this.handleSubmitName} handleSubmitResponse={this.handleSubmitResponse} />\n        Returned Reponses: {responses}\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}